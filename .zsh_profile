# zsh plugins
source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

plugins=(zsh-autosuggestions)

# config {

prompt_context () {
    prompt_segment black default "[$USER@$HOST]"
}

# Dir: current working directory
prompt_dir() {
  prompt_segment blue $CURRENT_FG '%3~'
}

# }

# alias {
#
alias rr="cargo run | bat -l rust"

alias ll='ls -lah'
alias vi=vim

alias ag='ag --color-match=36'
alias pack="mvn clean package -DskipTests=true -Dmaven.test.skip=true"

alias http="/usr/local/bin/http --verify=no"

alias -s gz='tar -xzvf'
alias -s tgz='tar -xzvf'
alias -s zip='unzip'
alias -s bz2='tar -xjvf'

alias nt="sudo nginx -t"
alias nsr="sudo nginx -s reload"

alias clone='git clone --depth=1'

alias grcb='git push origin master:$(git_current_branch)'
alias grpush='git push origin HEAD:refs/for/$(git_current_branch)'
alias grbd='git push origin :'
alias gcpush='grcb && grpush'

alias proxy='export ALL_PROXY=socks5://127.0.0.1:1080'

alias rmpyc='find . -name "*.pyc" | xargs rm'

# }

# Software {
alias typora="/usr/bin/open -a /Applications/Typora.app $1"

alias subl="/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"

alias supervisorctl="/usr/local/bin/supervisorctl -c /usr/local/etc/supervisord.ini"

code () {
    if [[ $# = 0 ]]
    then
        open -a "Visual Studio Code"
    else
        [[ $1 = /* ]] && F="$1" || F="$PWD/${1#./}"
        open -a "Visual Studio Code" --args "$F"
    fi
}

function cdf() {
    target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
    if [ "$target" != "" ]; then
        cd "$target"; pwd
    else
        echo 'No Finder window found' >&2
    fi
}

function destroy() {
   current=`pwd`
   echo "delete $current..."
   cd ..
   /bin/rm -rf $current
}

# git update
function update() {
	git add . && git commit -am "`curl -s https://whatthecommit.com/index.txt `" && git push origin $(git_current_branch)
}

# }

# functions
function v() {
    ( cd ~/code/scripts/bionic && vagrant $* )
}

function transfer() {
    # write to output to tmpfile because of progress bar
    tmpfile=$( mktemp -t transferXXX )
    curl --progress-bar --upload-file $1 https://transfer.sh/$(basename $1) >> $tmpfile;
    cat $tmpfile;
    rm -f $tmpfile;
}

alias clone='git clone --depth=1'

alias ip="ifconfig | grep 'inet ' | uniq"

# docker
function drm() {
    docker ps -a | grep 'Exited' | awk '{print $1}' | xargs docker rm
}
function drmi() {
    docker images -a | grep '<none>' | awk '{print $3}' | xargs docker rmi
}

export LC_CTYPE="zh_CN.UTF-8"

# Java
export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar

# Golang
export GOPATH=$HOME/code/go
export GOBIN=$GOPATH/bin.$GOVERSION
export GO111MODULE=on

# NodeJS
export NODE_PATH="/usr/local/lib/node_modules"
export NODE_HOME="/usr/local/opt/node"

export EDITOR="/usr/local/bin/vim"

# Pyenv
# export PYENV_ROOT=$HOME/.pyenv

# Rust
export RUST_HOME=/usr/local/opt/rust
export RUST_SRC_PATH=$HOME/code/rust/rust_src

export PATH=$NODE_HOME/bin:/usr/local/opt/llvm/bin:/usr/local/opt/qt/bin:/usr/local/opt/bison/bin:/usr/local/sbin:$JAVA_HOME/bin:$GOBIN:$GOROOT/bin:~/.composer/vendor/bin:~/.cargo/bin:$PATH

# homebrew http://ban.ninja/ @dep
export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles


# Highlight linux man page
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

source ~/.zsh/.zsh_local

for module in `ls ~/.zsh/*.zsh`
do
	source $module
done

serve () {
	if [[ -n "$1" && -n "$2" ]]
	then
		sudo bash ~/code/scripts/server-scripts/serve-laravel.sh "$1" "$2" 80
	else
		echo "Error: missing required parameters."
		echo "Usage: "
		echo "  serve domain path"
	fi
}

# elk
export ES_HOME=/usr/local/opt/elasticsearch
export ES_DATA=${ES_HOME}/data
export KIBANA_HOME=/usr/local/opt/kibana
export KIBANA_DATA=${KIBANA_HOME}/data
